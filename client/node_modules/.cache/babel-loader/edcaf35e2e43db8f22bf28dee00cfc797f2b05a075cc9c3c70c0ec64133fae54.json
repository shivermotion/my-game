{"ast":null,"code":"import { Loader, FileLoader } from 'three';\nimport * as Nodes from '../nodes/Nodes.js';\nclass NodeMaterialLoader extends Loader {\n  constructor(manager, library = {}) {\n    super(manager);\n    this.nodes = {};\n    this.materials = {};\n    this.passes = {};\n    this.names = {};\n    this.library = library;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n    return this;\n  }\n  getObjectByName(uuid) {\n    return this.names[uuid];\n  }\n  getObjectById(uuid) {\n    return this.library[uuid] || this.nodes[uuid] || this.materials[uuid] || this.passes[uuid] || this.names[uuid];\n  }\n  getNode(uuid) {\n    const object = this.getObjectById(uuid);\n    if (!object) {\n      console.warn('Node \"' + uuid + '\" not found.');\n    }\n    return object;\n  }\n  resolve(json) {\n    switch (typeof json) {\n      case 'boolean':\n      case 'number':\n        return json;\n      case 'string':\n        if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/i.test(json) || this.library[json]) {\n          return this.getNode(json);\n        }\n        return json;\n      default:\n        if (Array.isArray(json)) {\n          for (let i = 0; i < json.length; i++) {\n            json[i] = this.resolve(json[i]);\n          }\n        } else {\n          for (const prop in json) {\n            if (prop === 'uuid') continue;\n            json[prop] = this.resolve(json[prop]);\n          }\n        }\n    }\n    return json;\n  }\n  declare(json) {\n    let uuid, node, object;\n    for (uuid in json.nodes) {\n      node = json.nodes[uuid];\n      object = new Nodes[node.nodeType + 'Node']();\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n      this.nodes[uuid] = object;\n    }\n    for (uuid in json.materials) {\n      node = json.materials[uuid];\n      object = new Nodes[node.type]();\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n      this.materials[uuid] = object;\n    }\n    for (uuid in json.passes) {\n      node = json.passes[uuid];\n      object = new Nodes[node.type]();\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n      this.passes[uuid] = object;\n    }\n    if (json.material) this.material = this.materials[json.material];\n    if (json.pass) this.pass = this.passes[json.pass];\n    return json;\n  }\n  parse(json) {\n    let uuid;\n    json = this.resolve(this.declare(json));\n    for (uuid in json.nodes) {\n      this.nodes[uuid].copy(json.nodes[uuid]);\n    }\n    for (uuid in json.materials) {\n      this.materials[uuid].copy(json.materials[uuid]);\n    }\n    for (uuid in json.passes) {\n      this.passes[uuid].copy(json.passes[uuid]);\n    }\n    return this.material || this.pass || this;\n  }\n}\nclass NodeMaterialLoaderUtils {\n  static replaceUUIDObject(object, uuid, value, recursive) {\n    recursive = recursive !== undefined ? recursive : true;\n    if (typeof uuid === 'object') uuid = uuid.uuid;\n    if (typeof object === 'object') {\n      const keys = Object.keys(object);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (recursive) {\n          object[key] = this.replaceUUIDObject(object[key], uuid, value);\n        }\n        if (key === uuid) {\n          object[uuid] = object[key];\n          delete object[key];\n        }\n      }\n    }\n    return object === uuid ? value : object;\n  }\n  static replaceUUID(json, uuid, value) {\n    this.replaceUUIDObject(json, uuid, value, false);\n    this.replaceUUIDObject(json.nodes, uuid, value);\n    this.replaceUUIDObject(json.materials, uuid, value);\n    this.replaceUUIDObject(json.passes, uuid, value);\n    this.replaceUUIDObject(json.library, uuid, value, false);\n    return json;\n  }\n}\nexport { NodeMaterialLoader, NodeMaterialLoaderUtils };","map":{"version":3,"names":["Loader","FileLoader","Nodes","NodeMaterialLoader","constructor","manager","library","nodes","materials","passes","names","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","text","parse","JSON","getObjectByName","uuid","getObjectById","getNode","object","console","warn","resolve","json","test","Array","isArray","i","length","prop","declare","node","nodeType","name","type","material","pass","copy","NodeMaterialLoaderUtils","replaceUUIDObject","value","recursive","undefined","keys","Object","key","replaceUUID"],"sources":["C:/Users/Work/node_modules/three-stdlib/loaders/NodeMaterialLoader.js"],"sourcesContent":["import { Loader, FileLoader } from 'three';\nimport * as Nodes from '../nodes/Nodes.js';\n\nclass NodeMaterialLoader extends Loader {\n  constructor(manager, library = {}) {\n    super(manager);\n    this.nodes = {};\n    this.materials = {};\n    this.passes = {};\n    this.names = {};\n    this.library = library;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n    return this;\n  }\n\n  getObjectByName(uuid) {\n    return this.names[uuid];\n  }\n\n  getObjectById(uuid) {\n    return this.library[uuid] || this.nodes[uuid] || this.materials[uuid] || this.passes[uuid] || this.names[uuid];\n  }\n\n  getNode(uuid) {\n    const object = this.getObjectById(uuid);\n\n    if (!object) {\n      console.warn('Node \"' + uuid + '\" not found.');\n    }\n\n    return object;\n  }\n\n  resolve(json) {\n    switch (typeof json) {\n      case 'boolean':\n      case 'number':\n        return json;\n\n      case 'string':\n        if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/i.test(json) || this.library[json]) {\n          return this.getNode(json);\n        }\n\n        return json;\n\n      default:\n        if (Array.isArray(json)) {\n          for (let i = 0; i < json.length; i++) {\n            json[i] = this.resolve(json[i]);\n          }\n        } else {\n          for (const prop in json) {\n            if (prop === 'uuid') continue;\n            json[prop] = this.resolve(json[prop]);\n          }\n        }\n\n    }\n\n    return json;\n  }\n\n  declare(json) {\n    let uuid, node, object;\n\n    for (uuid in json.nodes) {\n      node = json.nodes[uuid];\n      object = new Nodes[node.nodeType + 'Node']();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.nodes[uuid] = object;\n    }\n\n    for (uuid in json.materials) {\n      node = json.materials[uuid];\n      object = new Nodes[node.type]();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.materials[uuid] = object;\n    }\n\n    for (uuid in json.passes) {\n      node = json.passes[uuid];\n      object = new Nodes[node.type]();\n\n      if (node.name) {\n        object.name = node.name;\n        this.names[object.name] = object;\n      }\n\n      this.passes[uuid] = object;\n    }\n\n    if (json.material) this.material = this.materials[json.material];\n    if (json.pass) this.pass = this.passes[json.pass];\n    return json;\n  }\n\n  parse(json) {\n    let uuid;\n    json = this.resolve(this.declare(json));\n\n    for (uuid in json.nodes) {\n      this.nodes[uuid].copy(json.nodes[uuid]);\n    }\n\n    for (uuid in json.materials) {\n      this.materials[uuid].copy(json.materials[uuid]);\n    }\n\n    for (uuid in json.passes) {\n      this.passes[uuid].copy(json.passes[uuid]);\n    }\n\n    return this.material || this.pass || this;\n  }\n\n}\n\nclass NodeMaterialLoaderUtils {\n  static replaceUUIDObject(object, uuid, value, recursive) {\n    recursive = recursive !== undefined ? recursive : true;\n    if (typeof uuid === 'object') uuid = uuid.uuid;\n\n    if (typeof object === 'object') {\n      const keys = Object.keys(object);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        if (recursive) {\n          object[key] = this.replaceUUIDObject(object[key], uuid, value);\n        }\n\n        if (key === uuid) {\n          object[uuid] = object[key];\n          delete object[key];\n        }\n      }\n    }\n\n    return object === uuid ? value : object;\n  }\n\n  static replaceUUID(json, uuid, value) {\n    this.replaceUUIDObject(json, uuid, value, false);\n    this.replaceUUIDObject(json.nodes, uuid, value);\n    this.replaceUUIDObject(json.materials, uuid, value);\n    this.replaceUUIDObject(json.passes, uuid, value);\n    this.replaceUUIDObject(json.library, uuid, value, false);\n    return json;\n  }\n\n}\n\nexport { NodeMaterialLoader, NodeMaterialLoaderUtils };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}