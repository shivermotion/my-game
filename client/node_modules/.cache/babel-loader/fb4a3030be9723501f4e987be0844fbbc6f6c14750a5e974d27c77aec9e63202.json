{"ast":null,"code":"\"use strict\";\n\n/* istanbul ignore file - tricky to import some things from this module during testing */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.createSyntaxDiagramsCode = exports.clearCache = exports.GAstVisitor = exports.serializeProduction = exports.serializeGrammar = exports.Terminal = exports.Rule = exports.RepetitionWithSeparator = exports.RepetitionMandatoryWithSeparator = exports.RepetitionMandatory = exports.Repetition = exports.Option = exports.NonTerminal = exports.Alternative = exports.Alternation = exports.defaultLexerErrorProvider = exports.NoViableAltException = exports.NotAllInputParsedException = exports.MismatchedTokenException = exports.isRecognitionException = exports.EarlyExitException = exports.defaultParserErrorProvider = exports.tokenName = exports.tokenMatcher = exports.tokenLabel = exports.EOF = exports.createTokenInstance = exports.createToken = exports.LexerDefinitionErrorType = exports.Lexer = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.EmbeddedActionsParser = exports.CstParser = exports.VERSION = void 0;\n// semantic version\nvar version_1 = require(\"./version\");\nObject.defineProperty(exports, \"VERSION\", {\n  enumerable: true,\n  get: function () {\n    return version_1.VERSION;\n  }\n});\nvar parser_1 = require(\"./parse/parser/parser\");\nObject.defineProperty(exports, \"CstParser\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.CstParser;\n  }\n});\nObject.defineProperty(exports, \"EmbeddedActionsParser\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.EmbeddedActionsParser;\n  }\n});\nObject.defineProperty(exports, \"ParserDefinitionErrorType\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.ParserDefinitionErrorType;\n  }\n});\nObject.defineProperty(exports, \"EMPTY_ALT\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.EMPTY_ALT;\n  }\n});\nvar lexer_public_1 = require(\"./scan/lexer_public\");\nObject.defineProperty(exports, \"Lexer\", {\n  enumerable: true,\n  get: function () {\n    return lexer_public_1.Lexer;\n  }\n});\nObject.defineProperty(exports, \"LexerDefinitionErrorType\", {\n  enumerable: true,\n  get: function () {\n    return lexer_public_1.LexerDefinitionErrorType;\n  }\n});\n// Tokens utilities\nvar tokens_public_1 = require(\"./scan/tokens_public\");\nObject.defineProperty(exports, \"createToken\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.createToken;\n  }\n});\nObject.defineProperty(exports, \"createTokenInstance\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.createTokenInstance;\n  }\n});\nObject.defineProperty(exports, \"EOF\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.EOF;\n  }\n});\nObject.defineProperty(exports, \"tokenLabel\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenLabel;\n  }\n});\nObject.defineProperty(exports, \"tokenMatcher\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenMatcher;\n  }\n});\nObject.defineProperty(exports, \"tokenName\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenName;\n  }\n});\n// Other Utilities\nvar errors_public_1 = require(\"./parse/errors_public\");\nObject.defineProperty(exports, \"defaultParserErrorProvider\", {\n  enumerable: true,\n  get: function () {\n    return errors_public_1.defaultParserErrorProvider;\n  }\n});\nvar exceptions_public_1 = require(\"./parse/exceptions_public\");\nObject.defineProperty(exports, \"EarlyExitException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.EarlyExitException;\n  }\n});\nObject.defineProperty(exports, \"isRecognitionException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.isRecognitionException;\n  }\n});\nObject.defineProperty(exports, \"MismatchedTokenException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.MismatchedTokenException;\n  }\n});\nObject.defineProperty(exports, \"NotAllInputParsedException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.NotAllInputParsedException;\n  }\n});\nObject.defineProperty(exports, \"NoViableAltException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.NoViableAltException;\n  }\n});\nvar lexer_errors_public_1 = require(\"./scan/lexer_errors_public\");\nObject.defineProperty(exports, \"defaultLexerErrorProvider\", {\n  enumerable: true,\n  get: function () {\n    return lexer_errors_public_1.defaultLexerErrorProvider;\n  }\n});\n// grammar reflection API\nvar gast_public_1 = require(\"./parse/grammar/gast/gast_public\");\nObject.defineProperty(exports, \"Alternation\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Alternation;\n  }\n});\nObject.defineProperty(exports, \"Alternative\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Alternative;\n  }\n});\nObject.defineProperty(exports, \"NonTerminal\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.NonTerminal;\n  }\n});\nObject.defineProperty(exports, \"Option\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Option;\n  }\n});\nObject.defineProperty(exports, \"Repetition\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Repetition;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatory\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.RepetitionMandatory;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatoryWithSeparator\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.RepetitionMandatoryWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"RepetitionWithSeparator\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.RepetitionWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"Rule\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Rule;\n  }\n});\nObject.defineProperty(exports, \"Terminal\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_1.Terminal;\n  }\n});\n// GAST Utilities\nvar gast_public_2 = require(\"./parse/grammar/gast/gast_public\");\nObject.defineProperty(exports, \"serializeGrammar\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_2.serializeGrammar;\n  }\n});\nObject.defineProperty(exports, \"serializeProduction\", {\n  enumerable: true,\n  get: function () {\n    return gast_public_2.serializeProduction;\n  }\n});\nvar gast_visitor_public_1 = require(\"./parse/grammar/gast/gast_visitor_public\");\nObject.defineProperty(exports, \"GAstVisitor\", {\n  enumerable: true,\n  get: function () {\n    return gast_visitor_public_1.GAstVisitor;\n  }\n});\n/* istanbul ignore next */\nfunction clearCache() {\n  console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" + \"\\n\\t It performs no action other than printing this message.\" + \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\nexports.clearCache = clearCache;\nvar render_public_1 = require(\"./diagrams/render_public\");\nObject.defineProperty(exports, \"createSyntaxDiagramsCode\", {\n  enumerable: true,\n  get: function () {\n    return render_public_1.createSyntaxDiagramsCode;\n  }\n});\nvar Parser = /** @class */function () {\n  function Parser() {\n    throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" + \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n  }\n  return Parser;\n}();\nexports.Parser = Parser;","map":{"version":3,"names":["version_1","require","Object","defineProperty","exports","enumerable","get","VERSION","parser_1","CstParser","EmbeddedActionsParser","ParserDefinitionErrorType","EMPTY_ALT","lexer_public_1","Lexer","LexerDefinitionErrorType","tokens_public_1","createToken","createTokenInstance","EOF","tokenLabel","tokenMatcher","tokenName","errors_public_1","defaultParserErrorProvider","exceptions_public_1","EarlyExitException","isRecognitionException","MismatchedTokenException","NotAllInputParsedException","NoViableAltException","lexer_errors_public_1","defaultLexerErrorProvider","gast_public_1","Alternation","Alternative","NonTerminal","Option","Repetition","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Rule","Terminal","gast_public_2","serializeGrammar","serializeProduction","gast_visitor_public_1","GAstVisitor","clearCache","console","warn","render_public_1","createSyntaxDiagramsCode","Parser","Error"],"sources":["C:\\Users\\Work\\node_modules\\chevrotain\\src\\api.ts"],"sourcesContent":["/* istanbul ignore file - tricky to import some things from this module during testing */\n\n// semantic version\nexport { VERSION } from \"./version\"\n\nexport {\n  CstParser,\n  EmbeddedActionsParser,\n  ParserDefinitionErrorType,\n  EMPTY_ALT\n} from \"./parse/parser/parser\"\n\nexport { Lexer, LexerDefinitionErrorType } from \"./scan/lexer_public\"\n\n// Tokens utilities\nexport {\n  createToken,\n  createTokenInstance,\n  EOF,\n  tokenLabel,\n  tokenMatcher,\n  tokenName\n} from \"./scan/tokens_public\"\n\n// Other Utilities\n\nexport { defaultParserErrorProvider } from \"./parse/errors_public\"\n\nexport {\n  EarlyExitException,\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException,\n  NoViableAltException\n} from \"./parse/exceptions_public\"\n\nexport { defaultLexerErrorProvider } from \"./scan/lexer_errors_public\"\n\n// grammar reflection API\nexport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./parse/grammar/gast/gast_public\"\n\n// GAST Utilities\n\nexport {\n  serializeGrammar,\n  serializeProduction\n} from \"./parse/grammar/gast/gast_public\"\n\nexport { GAstVisitor } from \"./parse/grammar/gast/gast_visitor_public\"\n\n/* istanbul ignore next */\nexport function clearCache() {\n  console.warn(\n    \"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n      \"\\n\\t It performs no action other than printing this message.\" +\n      \"\\n\\t Please avoid using it as it will be completely removed in the future\"\n  )\n}\n\nexport { createSyntaxDiagramsCode } from \"./diagrams/render_public\"\n\nexport class Parser {\n  constructor() {\n    throw new Error(\n      \"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n        \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\"\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}