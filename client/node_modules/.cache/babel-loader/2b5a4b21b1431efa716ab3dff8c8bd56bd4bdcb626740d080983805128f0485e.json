{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const tweenCamera = direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  };\n  const animateStep = delta => {\n    if (!animating.current) return;\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n      return;\n    }\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step); // animate orientation\n\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n    mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n    mainCamera.quaternion.copy(q1);\n    if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n    invalidate();\n  };\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) {\n        scene.background = backgroundRef.current;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const beforeRender = () => {\n    var _gizmoRef$current;\n\n    // Sync gizmo with main camera orientation\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  });\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\nexport { GizmoHelper, useGizmoContext };","map":{"version":3,"names":["React","useThree","useFrame","createPortal","Object3D","Matrix4","Quaternion","Vector3","Scene","OrthographicCamera","useCamera","Context","createContext","useGizmoContext","useContext","turnRate","Math","PI","dummy","matrix","q1","q2","target","targetPosition","GizmoHelper","alignment","margin","onUpdate","onTarget","children","GizmoHelperComponent","size","mainCamera","camera","defaultControls","controls","gl","scene","invalidate","backgroundRef","useRef","gizmoRef","virtualCam","virtualScene","useState","animating","radius","focusPoint","tweenCamera","direction","current","position","distanceTo","copy","quaternion","multiplyScalar","add","lookAt","animateStep","delta","angleTo","step","rotateTowards","set","applyQuaternion","up","normalize","update","useEffect","background","beforeRender","_gizmoRef$current","invert","setFromRotationMatrix","_","autoClear","clearDepth","render","gizmoHelperContext","raycast","marginX","marginY","x","endsWith","width","y","startsWith","height","createElement","Provider","value","ref","makeDefault"],"sources":["C:/Users/Work/node_modules/@react-three/drei/core/GizmoHelper.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\n\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n\n  const tweenCamera = direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  };\n\n  const animateStep = delta => {\n    if (!animating.current) return;\n\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n      return;\n    }\n\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step); // animate orientation\n\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n    mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n    mainCamera.quaternion.copy(q1);\n    if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n    invalidate();\n  };\n\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) {\n        scene.background = backgroundRef.current;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const beforeRender = () => {\n    var _gizmoRef$current;\n\n    // Sync gizmo with main camera orientation\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  });\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}