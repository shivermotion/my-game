{"ast":null,"code":"import { Vector3, Vector2, Triangle, DoubleSide, BackSide } from 'three';\n\n// Ripped and modified From THREE.js Mesh raycast\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\nvar vA = new Vector3();\nvar vB = new Vector3();\nvar vC = new Vector3();\nvar uvA = new Vector2();\nvar uvB = new Vector2();\nvar uvC = new Vector2();\nvar intersectionPoint = new Vector3();\nvar intersectionPointWorld = new Vector3();\nfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n  var intersect;\n  if (material.side === BackSide) {\n    intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n  } else {\n    intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n  }\n  if (intersect === null) return null;\n  intersectionPointWorld.copy(point);\n  intersectionPointWorld.applyMatrix4(object.matrixWorld);\n  var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n  if (distance < raycaster.near || distance > raycaster.far) return null;\n  return {\n    // EDITED\n    // Including the local-space point so it can be used to accelerate raycasting\n    localPoint: point,\n    distance: distance,\n    point: intersectionPointWorld.clone(),\n    object: object\n  };\n}\nfunction checkBufferGeometryIntersection(object, raycaster, ray, position, uv, a, b, c) {\n  vA.fromBufferAttribute(position, a);\n  vB.fromBufferAttribute(position, b);\n  vC.fromBufferAttribute(position, c);\n  var intersection = checkIntersection(object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint);\n  if (intersection) {\n    if (uv) {\n      uvA.fromBufferAttribute(uv, a);\n      uvB.fromBufferAttribute(uv, b);\n      uvC.fromBufferAttribute(uv, c);\n      intersection.uv = Triangle.getUV(intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2());\n    }\n    const face = {\n      a: a,\n      b: b,\n      c: c,\n      normal: new Vector3(),\n      materialIndex: 0\n    };\n    Triangle.getNormal(vA, vB, vC, face.normal);\n    intersection.face = face;\n    intersection.faceIndex = a;\n  }\n  return intersection;\n}\n\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\nfunction intersectTri(mesh, geo, raycaster, ray, tri, intersections) {\n  const triOffset = tri * 3;\n  const a = geo.index.getX(triOffset);\n  const b = geo.index.getX(triOffset + 1);\n  const c = geo.index.getX(triOffset + 2);\n  const intersection = checkBufferGeometryIntersection(mesh, raycaster, ray, geo.attributes.position, geo.attributes.uv, a, b, c);\n  if (intersection) {\n    intersection.faceIndex = tri;\n    if (intersections) intersections.push(intersection);\n    return intersection;\n  }\n  return null;\n}\nexport { intersectTri };","map":{"version":3,"names":["Vector3","Vector2","Triangle","DoubleSide","BackSide","vA","vB","vC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","object","material","raycaster","ray","pA","pB","pC","point","intersect","side","intersectTriangle","copy","applyMatrix4","matrixWorld","distance","origin","distanceTo","near","far","localPoint","clone","checkBufferGeometryIntersection","position","uv","a","b","c","fromBufferAttribute","intersection","getUV","face","normal","materialIndex","getNormal","faceIndex","intersectTri","mesh","geo","tri","intersections","triOffset","index","getX","attributes","push"],"sources":["C:/Users/Work/node_modules/three-mesh-bvh/src/Utils/ThreeIntersectionUtilities.js"],"sourcesContent":["import { Vector3, Vector2, Triangle, DoubleSide, BackSide } from 'three';\r\n\r\n// Ripped and modified From THREE.js Mesh raycast\r\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\r\nvar vA = new Vector3();\r\nvar vB = new Vector3();\r\nvar vC = new Vector3();\r\n\r\nvar uvA = new Vector2();\r\nvar uvB = new Vector2();\r\nvar uvC = new Vector2();\r\n\r\nvar intersectionPoint = new Vector3();\r\nvar intersectionPointWorld = new Vector3();\r\n\r\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\tvar intersect;\r\n\tif ( material.side === BackSide ) {\r\n\r\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t} else {\r\n\r\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\r\n\r\n\t}\r\n\r\n\tif ( intersect === null ) return null;\r\n\r\n\tintersectionPointWorld.copy( point );\r\n\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\treturn {\r\n\r\n\t\t// EDITED\r\n\t\t// Including the local-space point so it can be used to accelerate raycasting\r\n\t\tlocalPoint: point,\r\n\t\tdistance: distance,\r\n\t\tpoint: intersectionPointWorld.clone(),\r\n\t\tobject: object\r\n\t};\r\n\r\n}\r\n\r\nfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\r\n\r\n\tvA.fromBufferAttribute( position, a );\r\n\tvB.fromBufferAttribute( position, b );\r\n\tvC.fromBufferAttribute( position, c );\r\n\r\n\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tif ( uv ) {\r\n\r\n\t\t\tuvA.fromBufferAttribute( uv, a );\r\n\t\t\tuvB.fromBufferAttribute( uv, b );\r\n\t\t\tuvC.fromBufferAttribute( uv, c );\r\n\r\n\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2( ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst face = {\r\n\t\t\ta: a,\r\n\t\t\tb: b,\r\n\t\t\tc: c,\r\n\t\t\tnormal: new Vector3( ),\r\n\t\t\tmaterialIndex: 0\r\n\t\t};\r\n\r\n\t\tTriangle.getNormal( vA, vB, vC, face.normal );\r\n\r\n\t\tintersection.face = face;\r\n\t\tintersection.faceIndex = a;\r\n\r\n\t}\r\n\r\n\treturn intersection;\r\n\r\n}\r\n\r\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\r\nfunction intersectTri( mesh, geo, raycaster, ray, tri, intersections ) {\r\n\r\n\tconst triOffset = tri * 3;\r\n\tconst a = geo.index.getX( triOffset );\r\n\tconst b = geo.index.getX( triOffset + 1 );\r\n\tconst c = geo.index.getX( triOffset + 2 );\r\n\r\n\tconst intersection = checkBufferGeometryIntersection( mesh, raycaster, ray, geo.attributes.position, geo.attributes.uv, a, b, c );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tintersection.faceIndex = tri;\r\n\t\tif ( intersections ) intersections.push( intersection );\r\n\t\treturn intersection;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\nexport { intersectTri };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}