{"ast":null,"code":"import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nconst DepthBuffer = /*#__PURE__*/React.forwardRef(({\n  size = 256\n}, ref) => {\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  const depthFBO = useFBO(w, h, depthConfig);\n  React.useImperativeHandle(ref, () => depthFBO == null ? void 0 : depthFBO.depthTexture);\n  return useFrame(state => {\n    state.gl.setRenderTarget(depthFBO);\n    state.gl.render(state.scene, state.camera);\n    state.gl.setRenderTarget(null);\n  });\n});\nexport { DepthBuffer };","map":{"version":3,"names":["DepthTexture","DepthFormat","UnsignedShortType","React","useThree","useFrame","useFBO","DepthBuffer","forwardRef","size","ref","dpr","state","viewport","width","height","w","h","depthConfig","useMemo","depthTexture","format","type","depthFBO","useImperativeHandle","gl","setRenderTarget","render","scene","camera"],"sources":["C:/Users/Work/node_modules/@react-three/drei/core/DepthBuffer.js"],"sourcesContent":["import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst DepthBuffer = /*#__PURE__*/React.forwardRef(({\n  size = 256\n}, ref) => {\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  const depthFBO = useFBO(w, h, depthConfig);\n  React.useImperativeHandle(ref, () => depthFBO == null ? void 0 : depthFBO.depthTexture);\n  return useFrame(state => {\n    state.gl.setRenderTarget(depthFBO);\n    state.gl.render(state.scene, state.camera);\n    state.gl.setRenderTarget(null);\n  });\n});\n\nexport { DepthBuffer };\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,EAAEC,iBAAiB,QAAQ,OAAO;AACpE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AACvD,SAASC,MAAM,QAAQ,aAAa;AAEpC,MAAMC,WAAW,GAAG,aAAaJ,KAAK,CAACK,UAAU,CAAC,CAAC;EACjDC,IAAI,GAAG;AACT,CAAC,EAAEC,GAAG,KAAK;EACT,MAAMC,GAAG,GAAGP,QAAQ,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACF,GAAG,CAAC;EACjD,MAAM;IACJG,KAAK;IACLC;EACF,CAAC,GAAGX,QAAQ,CAACQ,KAAK,IAAIA,KAAK,CAACH,IAAI,CAAC;EACjC,MAAMO,CAAC,GAAGP,IAAI,IAAIK,KAAK,GAAGH,GAAG;EAC7B,MAAMM,CAAC,GAAGR,IAAI,IAAIM,MAAM,GAAGJ,GAAG;EAC9B,MAAMO,WAAW,GAAGf,KAAK,CAACgB,OAAO,CAAC,MAAM;IACtC,MAAMC,YAAY,GAAG,IAAIpB,YAAY,CAACgB,CAAC,EAAEC,CAAC,CAAC;IAC3CG,YAAY,CAACC,MAAM,GAAGpB,WAAW;IACjCmB,YAAY,CAACE,IAAI,GAAGpB,iBAAiB;IACrC,OAAO;MACLkB;IACF,CAAC;EACH,CAAC,EAAE,CAACJ,CAAC,EAAEC,CAAC,CAAC,CAAC;EACV,MAAMM,QAAQ,GAAGjB,MAAM,CAACU,CAAC,EAAEC,CAAC,EAAEC,WAAW,CAAC;EAC1Cf,KAAK,CAACqB,mBAAmB,CAACd,GAAG,EAAE,MAAMa,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACH,YAAY,CAAC;EACvF,OAAOf,QAAQ,CAACO,KAAK,IAAI;IACvBA,KAAK,CAACa,EAAE,CAACC,eAAe,CAACH,QAAQ,CAAC;IAClCX,KAAK,CAACa,EAAE,CAACE,MAAM,CAACf,KAAK,CAACgB,KAAK,EAAEhB,KAAK,CAACiB,MAAM,CAAC;IAC1CjB,KAAK,CAACa,EAAE,CAACC,eAAe,CAAC,IAAI,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,SAASnB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}