{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  faces = defaultFaces,\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\n    map: texture,\n    attachArray: \"material\",\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\nconst FaceCube = props => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onClick: props.onClick || handleClick\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    scale: 1.01,\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onClick: onClick || handleClick\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\nexport { GizmoViewcube };","map":{"version":3,"names":["_extends","React","useGizmoContext","Vector3","CanvasTexture","colors","bg","hover","text","stroke","defaultFaces","makePositionVector","xyz","multiplyScalar","corners","map","cornerDimensions","edges","edgeDimensions","edge","toArray","axis","FaceMaterial","index","font","faces","color","hoverColor","textColor","strokeColor","opacity","texture","useMemo","canvas","document","createElement","width","height","context","getContext","fillStyle","fillRect","strokeStyle","strokeRect","textAlign","fillText","toUpperCase","attachArray","transparent","FaceCube","props","tweenCamera","raycast","setHover","useState","handlePointerOut","e","stopPropagation","handleClick","face","normal","handlePointerMove","Math","floor","faceIndex","onPointerOut","onPointerMove","onClick","Array","_","key","EdgeCube","dimensions","position","handlePointerOver","scale","onPointerOver","visible","args","GizmoViewcube","corner","intensity"],"sources":["C:/Users/Work/node_modules/@react-three/drei/core/GizmoViewcube.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\n\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\n\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\n\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\n\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  faces = defaultFaces,\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\n    map: texture,\n    attachArray: \"material\",\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\n\nconst FaceCube = props => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onClick: props.onClick || handleClick\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\n\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    scale: 1.01,\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onClick: onClick || handleClick\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\n\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewcube };\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,OAAO,EAAEC,aAAa,QAAQ,OAAO;AAE9C,MAAMC,MAAM,GAAG;EACbC,EAAE,EAAE,SAAS;EACbC,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,YAAY,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC;AAExE,MAAMC,kBAAkB,GAAGC,GAAG,IAAI,IAAIT,OAAO,CAAC,GAAGS,GAAG,CAAC,CAACC,cAAc,CAAC,IAAI,CAAC;AAE1E,MAAMC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAACJ,kBAAkB,CAAC;AAC5I,MAAMK,gBAAgB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAC3C,MAAMC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACF,GAAG,CAACJ,kBAAkB,CAAC;AACtL,MAAMO,cAAc,GAAGD,KAAK,CAACF,GAAG,CAACI,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAAC,CAACL,GAAG,CAACM,IAAI,IAAIA,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AAE5F,MAAMC,YAAY,GAAGA,CAAC;EACpBf,KAAK;EACLgB,KAAK;EACLC,IAAI,GAAG,mCAAmC;EAC1CC,KAAK,GAAGf,YAAY;EACpBgB,KAAK,GAAGrB,MAAM,CAACC,EAAE;EACjBqB,UAAU,GAAGtB,MAAM,CAACE,KAAK;EACzBqB,SAAS,GAAGvB,MAAM,CAACG,IAAI;EACvBqB,WAAW,GAAGxB,MAAM,CAACI,MAAM;EAC3BqB,OAAO,GAAG;AACZ,CAAC,KAAK;EACJ,MAAMC,OAAO,GAAG9B,KAAK,CAAC+B,OAAO,CAAC,MAAM;IAClC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,KAAK,GAAG,GAAG;IAClBH,MAAM,CAACI,MAAM,GAAG,GAAG;IACnB,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,SAAS,GAAGd,KAAK;IACzBY,OAAO,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAER,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;IACnDC,OAAO,CAACI,WAAW,GAAGb,WAAW;IACjCS,OAAO,CAACK,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEV,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;IACrDC,OAAO,CAACd,IAAI,GAAGA,IAAI;IACnBc,OAAO,CAACM,SAAS,GAAG,QAAQ;IAC5BN,OAAO,CAACE,SAAS,GAAGZ,SAAS;IAC7BU,OAAO,CAACO,QAAQ,CAACpB,KAAK,CAACF,KAAK,CAAC,CAACuB,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACpD,OAAO,IAAI1C,aAAa,CAAC6B,MAAM,CAAC;EAClC,CAAC,EAAE,CAACV,KAAK,EAAEC,IAAI,EAAEE,KAAK,EAAEE,SAAS,EAAEC,WAAW,CAAC,CAAC;EAChD,OAAO,aAAa5B,KAAK,CAACkC,aAAa,CAAC,qBAAqB,EAAE;IAC7DpB,GAAG,EAAEgB,OAAO;IACZgB,WAAW,EAAE,UAAU;IACvBrB,KAAK,EAAEnB,KAAK,GAAGoB,UAAU,GAAG,OAAO;IACnCqB,WAAW,EAAE,IAAI;IACjBlB,OAAO,EAAEA;EACX,CAAC,CAAC;AACJ,CAAC;AAED,MAAMmB,QAAQ,GAAGC,KAAK,IAAI;EACxB,MAAM;IACJC,WAAW;IACXC;EACF,CAAC,GAAGlD,eAAe,CAAC,CAAC;EACrB,MAAM,CAACK,KAAK,EAAE8C,QAAQ,CAAC,GAAGpD,KAAK,CAACqD,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMC,gBAAgB,GAAGC,CAAC,IAAI;IAC5BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBJ,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMK,WAAW,GAAGF,CAAC,IAAI;IACvBA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBN,WAAW,CAACK,CAAC,CAACG,IAAI,CAACC,MAAM,CAAC;EAC5B,CAAC;EAED,MAAMC,iBAAiB,GAAGL,CAAC,IAAI;IAC7BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBJ,QAAQ,CAACS,IAAI,CAACC,KAAK,CAACP,CAAC,CAACQ,SAAS,GAAG,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,OAAO,aAAa/D,KAAK,CAACkC,aAAa,CAAC,MAAM,EAAE;IAC9CiB,OAAO,EAAEA,OAAO;IAChBa,YAAY,EAAEV,gBAAgB;IAC9BW,aAAa,EAAEL,iBAAiB;IAChCM,OAAO,EAAEjB,KAAK,CAACiB,OAAO,IAAIT;EAC5B,CAAC,EAAE,CAAC,GAAGU,KAAK,CAAC,CAAC,CAAC,CAAC,CAACrD,GAAG,CAAC,CAACsD,CAAC,EAAE9C,KAAK,KAAK,aAAatB,KAAK,CAACkC,aAAa,CAACb,YAAY,EAAEtB,QAAQ,CAAC;IACzFsE,GAAG,EAAE/C,KAAK;IACVA,KAAK,EAAEA,KAAK;IACZhB,KAAK,EAAEA,KAAK,KAAKgB;EACnB,CAAC,EAAE2B,KAAK,CAAC,CAAC,CAAC,EAAE,aAAajD,KAAK,CAACkC,aAAa,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;AACrE,CAAC;AAED,MAAMoC,QAAQ,GAAGA,CAAC;EAChBJ,OAAO;EACPK,UAAU;EACVC,QAAQ;EACR9C,UAAU,GAAGtB,MAAM,CAACE;AACtB,CAAC,KAAK;EACJ,MAAM;IACJ4C,WAAW;IACXC;EACF,CAAC,GAAGlD,eAAe,CAAC,CAAC;EACrB,MAAM,CAACK,KAAK,EAAE8C,QAAQ,CAAC,GAAGpD,KAAK,CAACqD,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMC,gBAAgB,GAAGC,CAAC,IAAI;IAC5BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBJ,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC;EAED,MAAMqB,iBAAiB,GAAGlB,CAAC,IAAI;IAC7BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBJ,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMK,WAAW,GAAGF,CAAC,IAAI;IACvBA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBN,WAAW,CAACsB,QAAQ,CAAC;EACvB,CAAC;EAED,OAAO,aAAaxE,KAAK,CAACkC,aAAa,CAAC,MAAM,EAAE;IAC9CwC,KAAK,EAAE,IAAI;IACXF,QAAQ,EAAEA,QAAQ;IAClBrB,OAAO,EAAEA,OAAO;IAChBwB,aAAa,EAAEF,iBAAiB;IAChCT,YAAY,EAAEV,gBAAgB;IAC9BY,OAAO,EAAEA,OAAO,IAAIT;EACtB,CAAC,EAAE,aAAazD,KAAK,CAACkC,aAAa,CAAC,mBAAmB,EAAE;IACvDT,KAAK,EAAEnB,KAAK,GAAGoB,UAAU,GAAG,OAAO;IACnCqB,WAAW,EAAE,IAAI;IACjBlB,OAAO,EAAE,GAAG;IACZ+C,OAAO,EAAEtE;EACX,CAAC,CAAC,EAAE,aAAaN,KAAK,CAACkC,aAAa,CAAC,aAAa,EAAE;IAClD2C,IAAI,EAAEN;EACR,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAMO,aAAa,GAAG7B,KAAK,IAAI;EAC7B,OAAO,aAAajD,KAAK,CAACkC,aAAa,CAAC,OAAO,EAAE;IAC/CwC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;EACpB,CAAC,EAAE,aAAa1E,KAAK,CAACkC,aAAa,CAACc,QAAQ,EAAEC,KAAK,CAAC,EAAEjC,KAAK,CAACF,GAAG,CAAC,CAACI,IAAI,EAAEI,KAAK,KAAK,aAAatB,KAAK,CAACkC,aAAa,CAACoC,QAAQ,EAAEvE,QAAQ,CAAC;IACnIsE,GAAG,EAAE/C,KAAK;IACVkD,QAAQ,EAAEtD,IAAI;IACdqD,UAAU,EAAEtD,cAAc,CAACK,KAAK;EAClC,CAAC,EAAE2B,KAAK,CAAC,CAAC,CAAC,EAAEpC,OAAO,CAACC,GAAG,CAAC,CAACiE,MAAM,EAAEzD,KAAK,KAAK,aAAatB,KAAK,CAACkC,aAAa,CAACoC,QAAQ,EAAEvE,QAAQ,CAAC;IAC9FsE,GAAG,EAAE/C,KAAK;IACVkD,QAAQ,EAAEO,MAAM;IAChBR,UAAU,EAAExD;EACd,CAAC,EAAEkC,KAAK,CAAC,CAAC,CAAC,EAAE,aAAajD,KAAK,CAACkC,aAAa,CAAC,cAAc,EAAE;IAC5D8C,SAAS,EAAE;EACb,CAAC,CAAC,EAAE,aAAahF,KAAK,CAACkC,aAAa,CAAC,YAAY,EAAE;IACjDsC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACtBQ,SAAS,EAAE;EACb,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAASF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}