{"ast":null,"code":"import { TRAVERSAL_COST, TRIANGLE_INTERSECT_COST } from '../Constants.js';\n\n// https://stackoverflow.com/questions/1248302/how-to-get-the-size-of-a-javascript-object\nfunction getPrimitiveSize(el) {\n  switch (typeof el) {\n    case 'number':\n      return 8;\n    case 'string':\n      return el.length * 2;\n    case 'boolean':\n      return 4;\n    default:\n      return 0;\n  }\n}\nfunction isTypedArray(arr) {\n  const regex = /(Uint|Int|Float)(8|16|32)Array/;\n  return regex.test(arr.constructor.name);\n}\nfunction getRootExtremes(bvh, group) {\n  const result = {\n    get total() {\n      console.warn('getRootExtremes: \"total\" has been replaced by \"nodeCount\" and will be removed in the next release.');\n      return this.nodeCount;\n    },\n    nodeCount: 0,\n    leafNodeCount: 0,\n    depth: {\n      min: Infinity,\n      max: -Infinity\n    },\n    tris: {\n      min: Infinity,\n      max: -Infinity\n    },\n    splits: [0, 0, 0],\n    surfaceAreaScore: 0\n  };\n  bvh.traverse((depth, isLeaf, boundingData, offsetOrSplit, count) => {\n    const l0 = boundingData[0 + 3] - boundingData[0];\n    const l1 = boundingData[1 + 3] - boundingData[1];\n    const l2 = boundingData[2 + 3] - boundingData[2];\n    const surfaceArea = 2 * (l0 * l1 + l1 * l2 + l2 * l0);\n    result.nodeCount++;\n    if (isLeaf) {\n      result.leafNodeCount++;\n      result.depth.min = Math.min(depth, result.depth.min);\n      result.depth.max = Math.max(depth, result.depth.max);\n      result.tris.min = Math.min(count, result.tris.min);\n      result.tris.max = Math.max(count, result.tris.max);\n      result.surfaceAreaScore += surfaceArea * TRIANGLE_INTERSECT_COST * count;\n    } else {\n      result.splits[offsetOrSplit]++;\n      result.surfaceAreaScore += surfaceArea * TRAVERSAL_COST;\n    }\n  }, group);\n\n  // If there are no leaf nodes because the tree hasn't finished generating yet.\n  if (result.tris.min === Infinity) {\n    result.tris.min = 0;\n    result.tris.max = 0;\n  }\n  if (result.depth.min === Infinity) {\n    result.depth.min = 0;\n    result.depth.max = 0;\n  }\n  return result;\n}\nfunction getBVHExtremes(bvh) {\n  return bvh._roots.map((root, i) => getRootExtremes(bvh, i));\n}\nfunction estimateMemoryInBytes(obj) {\n  const traversed = new Set();\n  const stack = [obj];\n  let bytes = 0;\n  while (stack.length) {\n    const curr = stack.pop();\n    if (traversed.has(curr)) {\n      continue;\n    }\n    traversed.add(curr);\n    for (let key in curr) {\n      if (!curr.hasOwnProperty(key)) {\n        continue;\n      }\n      bytes += getPrimitiveSize(key);\n      const value = curr[key];\n      if (value && (typeof value === 'object' || typeof value === 'function')) {\n        if (isTypedArray(value)) {\n          bytes += value.byteLength;\n        } else if (value instanceof ArrayBuffer) {\n          bytes += value.byteLength;\n        } else {\n          stack.push(value);\n        }\n      } else {\n        bytes += getPrimitiveSize(value);\n      }\n    }\n  }\n  return bytes;\n}\nexport { estimateMemoryInBytes, getBVHExtremes };","map":{"version":3,"names":["TRAVERSAL_COST","TRIANGLE_INTERSECT_COST","getPrimitiveSize","el","length","isTypedArray","arr","regex","test","constructor","name","getRootExtremes","bvh","group","result","total","console","warn","nodeCount","leafNodeCount","depth","min","Infinity","max","tris","splits","surfaceAreaScore","traverse","isLeaf","boundingData","offsetOrSplit","count","l0","l1","l2","surfaceArea","Math","getBVHExtremes","_roots","map","root","i","estimateMemoryInBytes","obj","traversed","Set","stack","bytes","curr","pop","has","add","key","hasOwnProperty","value","byteLength","ArrayBuffer","push"],"sources":["C:/Users/Work/node_modules/three-mesh-bvh/src/Utils/Debug.js"],"sourcesContent":["import { TRAVERSAL_COST, TRIANGLE_INTERSECT_COST } from '../Constants.js';\r\n\r\n// https://stackoverflow.com/questions/1248302/how-to-get-the-size-of-a-javascript-object\r\nfunction getPrimitiveSize( el ) {\r\n\r\n\tswitch ( typeof el ) {\r\n\r\n\t\tcase 'number':\r\n\t\t\treturn 8;\r\n\t\tcase 'string':\r\n\t\t\treturn el.length * 2;\r\n\t\tcase 'boolean':\r\n\t\t\treturn 4;\r\n\t\tdefault:\r\n\t\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction isTypedArray( arr ) {\r\n\r\n\tconst regex = /(Uint|Int|Float)(8|16|32)Array/;\r\n\treturn regex.test( arr.constructor.name );\r\n\r\n}\r\n\r\nfunction getRootExtremes( bvh, group ) {\r\n\r\n\tconst result = {\r\n\t\tget total() {\r\n\r\n\t\t\tconsole.warn( 'getRootExtremes: \"total\" has been replaced by \"nodeCount\" and will be removed in the next release.' );\r\n\t\t\treturn this.nodeCount;\r\n\r\n\t\t},\r\n\t\tnodeCount: 0,\r\n\t\tleafNodeCount: 0,\r\n\r\n\t\tdepth: {\r\n\t\t\tmin: Infinity, max: - Infinity\r\n\t\t},\r\n\t\ttris: {\r\n\t\t\tmin: Infinity, max: - Infinity\r\n\t\t},\r\n\t\tsplits: [ 0, 0, 0 ],\r\n\t\tsurfaceAreaScore: 0,\r\n\t};\r\n\r\n\tbvh.traverse( ( depth, isLeaf, boundingData, offsetOrSplit, count ) => {\r\n\r\n\t\tconst l0 = boundingData[ 0 + 3 ] - boundingData[ 0 ];\r\n\t\tconst l1 = boundingData[ 1 + 3 ] - boundingData[ 1 ];\r\n\t\tconst l2 = boundingData[ 2 + 3 ] - boundingData[ 2 ];\r\n\r\n\t\tconst surfaceArea = 2 * ( l0 * l1 + l1 * l2 + l2 * l0 );\r\n\r\n\t\tresult.nodeCount ++;\r\n\t\tif ( isLeaf ) {\r\n\r\n\t\t\tresult.leafNodeCount ++;\r\n\r\n\t\t\tresult.depth.min = Math.min( depth, result.depth.min );\r\n\t\t\tresult.depth.max = Math.max( depth, result.depth.max );\r\n\r\n\t\t\tresult.tris.min = Math.min( count, result.tris.min );\r\n\t\t\tresult.tris.max = Math.max( count, result.tris.max );\r\n\r\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRIANGLE_INTERSECT_COST * count;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult.splits[ offsetOrSplit ] ++;\r\n\r\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRAVERSAL_COST;\r\n\r\n\t\t}\r\n\r\n\t}, group );\r\n\r\n\t// If there are no leaf nodes because the tree hasn't finished generating yet.\r\n\tif ( result.tris.min === Infinity ) {\r\n\r\n\t\tresult.tris.min = 0;\r\n\t\tresult.tris.max = 0;\r\n\r\n\t}\r\n\r\n\tif ( result.depth.min === Infinity ) {\r\n\r\n\t\tresult.depth.min = 0;\r\n\t\tresult.depth.max = 0;\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nfunction getBVHExtremes( bvh ) {\r\n\r\n\treturn bvh._roots.map( ( root, i ) => getRootExtremes( bvh, i ) );\r\n\r\n}\r\n\r\nfunction estimateMemoryInBytes( obj ) {\r\n\r\n\tconst traversed = new Set();\r\n\tconst stack = [ obj ];\r\n\tlet bytes = 0;\r\n\r\n\twhile ( stack.length ) {\r\n\r\n\t\tconst curr = stack.pop();\r\n\t\tif ( traversed.has( curr ) ) {\r\n\r\n\t\t\tcontinue;\r\n\r\n\t\t}\r\n\r\n\t\ttraversed.add( curr );\r\n\r\n\t\tfor ( let key in curr ) {\r\n\r\n\t\t\tif ( ! curr.hasOwnProperty( key ) ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbytes += getPrimitiveSize( key );\r\n\r\n\t\t\tconst value = curr[ key ];\r\n\t\t\tif ( value && ( typeof value === 'object' || typeof value === 'function' ) ) {\r\n\r\n\t\t\t\tif ( isTypedArray( value ) ) {\r\n\r\n\t\t\t\t\tbytes += value.byteLength;\r\n\r\n\t\t\t\t} else if ( value instanceof ArrayBuffer ) {\r\n\r\n\t\t\t\t\tbytes += value.byteLength;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstack.push( value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbytes += getPrimitiveSize( value );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn bytes;\r\n\r\n}\r\n\r\nexport { estimateMemoryInBytes, getBVHExtremes };\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,uBAAuB,QAAQ,iBAAiB;;AAEzE;AACA,SAASC,gBAAgBA,CAAEC,EAAE,EAAG;EAE/B,QAAS,OAAOA,EAAE;IAEjB,KAAK,QAAQ;MACZ,OAAO,CAAC;IACT,KAAK,QAAQ;MACZ,OAAOA,EAAE,CAACC,MAAM,GAAG,CAAC;IACrB,KAAK,SAAS;MACb,OAAO,CAAC;IACT;MACC,OAAO,CAAC;EAEV;AAED;AAEA,SAASC,YAAYA,CAAEC,GAAG,EAAG;EAE5B,MAAMC,KAAK,GAAG,gCAAgC;EAC9C,OAAOA,KAAK,CAACC,IAAI,CAAEF,GAAG,CAACG,WAAW,CAACC,IAAK,CAAC;AAE1C;AAEA,SAASC,eAAeA,CAAEC,GAAG,EAAEC,KAAK,EAAG;EAEtC,MAAMC,MAAM,GAAG;IACd,IAAIC,KAAKA,CAAA,EAAG;MAEXC,OAAO,CAACC,IAAI,CAAE,oGAAqG,CAAC;MACpH,OAAO,IAAI,CAACC,SAAS;IAEtB,CAAC;IACDA,SAAS,EAAE,CAAC;IACZC,aAAa,EAAE,CAAC;IAEhBC,KAAK,EAAE;MACNC,GAAG,EAAEC,QAAQ;MAAEC,GAAG,EAAE,CAAED;IACvB,CAAC;IACDE,IAAI,EAAE;MACLH,GAAG,EAAEC,QAAQ;MAAEC,GAAG,EAAE,CAAED;IACvB,CAAC;IACDG,MAAM,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACnBC,gBAAgB,EAAE;EACnB,CAAC;EAEDd,GAAG,CAACe,QAAQ,CAAE,CAAEP,KAAK,EAAEQ,MAAM,EAAEC,YAAY,EAAEC,aAAa,EAAEC,KAAK,KAAM;IAEtE,MAAMC,EAAE,GAAGH,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAGA,YAAY,CAAE,CAAC,CAAE;IACpD,MAAMI,EAAE,GAAGJ,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAGA,YAAY,CAAE,CAAC,CAAE;IACpD,MAAMK,EAAE,GAAGL,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAGA,YAAY,CAAE,CAAC,CAAE;IAEpD,MAAMM,WAAW,GAAG,CAAC,IAAKH,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGF,EAAE,CAAE;IAEvDlB,MAAM,CAACI,SAAS,EAAG;IACnB,IAAKU,MAAM,EAAG;MAEbd,MAAM,CAACK,aAAa,EAAG;MAEvBL,MAAM,CAACM,KAAK,CAACC,GAAG,GAAGe,IAAI,CAACf,GAAG,CAAED,KAAK,EAAEN,MAAM,CAACM,KAAK,CAACC,GAAI,CAAC;MACtDP,MAAM,CAACM,KAAK,CAACG,GAAG,GAAGa,IAAI,CAACb,GAAG,CAAEH,KAAK,EAAEN,MAAM,CAACM,KAAK,CAACG,GAAI,CAAC;MAEtDT,MAAM,CAACU,IAAI,CAACH,GAAG,GAAGe,IAAI,CAACf,GAAG,CAAEU,KAAK,EAAEjB,MAAM,CAACU,IAAI,CAACH,GAAI,CAAC;MACpDP,MAAM,CAACU,IAAI,CAACD,GAAG,GAAGa,IAAI,CAACb,GAAG,CAAEQ,KAAK,EAAEjB,MAAM,CAACU,IAAI,CAACD,GAAI,CAAC;MAEpDT,MAAM,CAACY,gBAAgB,IAAIS,WAAW,GAAGlC,uBAAuB,GAAG8B,KAAK;IAEzE,CAAC,MAAM;MAENjB,MAAM,CAACW,MAAM,CAAEK,aAAa,CAAE,EAAG;MAEjChB,MAAM,CAACY,gBAAgB,IAAIS,WAAW,GAAGnC,cAAc;IAExD;EAED,CAAC,EAAEa,KAAM,CAAC;;EAEV;EACA,IAAKC,MAAM,CAACU,IAAI,CAACH,GAAG,KAAKC,QAAQ,EAAG;IAEnCR,MAAM,CAACU,IAAI,CAACH,GAAG,GAAG,CAAC;IACnBP,MAAM,CAACU,IAAI,CAACD,GAAG,GAAG,CAAC;EAEpB;EAEA,IAAKT,MAAM,CAACM,KAAK,CAACC,GAAG,KAAKC,QAAQ,EAAG;IAEpCR,MAAM,CAACM,KAAK,CAACC,GAAG,GAAG,CAAC;IACpBP,MAAM,CAACM,KAAK,CAACG,GAAG,GAAG,CAAC;EAErB;EAEA,OAAOT,MAAM;AAEd;AAEA,SAASuB,cAAcA,CAAEzB,GAAG,EAAG;EAE9B,OAAOA,GAAG,CAAC0B,MAAM,CAACC,GAAG,CAAE,CAAEC,IAAI,EAAEC,CAAC,KAAM9B,eAAe,CAAEC,GAAG,EAAE6B,CAAE,CAAE,CAAC;AAElE;AAEA,SAASC,qBAAqBA,CAAEC,GAAG,EAAG;EAErC,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3B,MAAMC,KAAK,GAAG,CAAEH,GAAG,CAAE;EACrB,IAAII,KAAK,GAAG,CAAC;EAEb,OAAQD,KAAK,CAAC1C,MAAM,EAAG;IAEtB,MAAM4C,IAAI,GAAGF,KAAK,CAACG,GAAG,CAAC,CAAC;IACxB,IAAKL,SAAS,CAACM,GAAG,CAAEF,IAAK,CAAC,EAAG;MAE5B;IAED;IAEAJ,SAAS,CAACO,GAAG,CAAEH,IAAK,CAAC;IAErB,KAAM,IAAII,GAAG,IAAIJ,IAAI,EAAG;MAEvB,IAAK,CAAEA,IAAI,CAACK,cAAc,CAAED,GAAI,CAAC,EAAG;QAEnC;MAED;MAEAL,KAAK,IAAI7C,gBAAgB,CAAEkD,GAAI,CAAC;MAEhC,MAAME,KAAK,GAAGN,IAAI,CAAEI,GAAG,CAAE;MACzB,IAAKE,KAAK,KAAM,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,UAAU,CAAE,EAAG;QAE5E,IAAKjD,YAAY,CAAEiD,KAAM,CAAC,EAAG;UAE5BP,KAAK,IAAIO,KAAK,CAACC,UAAU;QAE1B,CAAC,MAAM,IAAKD,KAAK,YAAYE,WAAW,EAAG;UAE1CT,KAAK,IAAIO,KAAK,CAACC,UAAU;QAE1B,CAAC,MAAM;UAENT,KAAK,CAACW,IAAI,CAAEH,KAAM,CAAC;QAEpB;MAED,CAAC,MAAM;QAENP,KAAK,IAAI7C,gBAAgB,CAAEoD,KAAM,CAAC;MAEnC;IAGD;EAED;EAEA,OAAOP,KAAK;AAEb;AAEA,SAASL,qBAAqB,EAAEL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}