{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\nconst CameraShake = /*#__PURE__*/React.forwardRef(({\n  intensity = 1,\n  decay,\n  decayRate = 0.65,\n  maxYaw = 0.1,\n  maxPitch = 0.1,\n  maxRoll = 0.1,\n  yawFrequency = 1,\n  pitchFrequency = 1,\n  rollFrequency = 1,\n  controls\n}, ref) => {\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    const currControls = defaultControls || (controls == null ? void 0 : controls.current);\n    const callback = () => void (initialRotation.current = camera.rotation.clone());\n    currControls == null ? void 0 : currControls.addEventListener('change', callback);\n    return () => void (currControls == null ? void 0 : currControls.removeEventListener('change', callback)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controls, defaultControls]);\n  useFrame(({\n    clock\n  }, delta) => {\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\nexport { CameraShake };","map":{"version":3,"names":["React","useThree","useFrame","SimplexNoise","CameraShake","forwardRef","intensity","decay","decayRate","maxYaw","maxPitch","maxRoll","yawFrequency","pitchFrequency","rollFrequency","controls","ref","camera","state","defaultControls","intensityRef","useRef","initialRotation","rotation","clone","yawNoise","useState","pitchNoise","rollNoise","constrainIntensity","current","useImperativeHandle","getIntensity","setIntensity","val","useEffect","currControls","callback","addEventListener","removeEventListener","clock","delta","shake","Math","pow","yaw","noise","elapsedTime","pitch","roll","set","x","y","z"],"sources":["C:/Users/Work/node_modules/@react-three/drei/core/CameraShake.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\n\nconst CameraShake = /*#__PURE__*/React.forwardRef(({\n  intensity = 1,\n  decay,\n  decayRate = 0.65,\n  maxYaw = 0.1,\n  maxPitch = 0.1,\n  maxRoll = 0.1,\n  yawFrequency = 1,\n  pitchFrequency = 1,\n  rollFrequency = 1,\n  controls\n}, ref) => {\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    const currControls = defaultControls || (controls == null ? void 0 : controls.current);\n\n    const callback = () => void (initialRotation.current = camera.rotation.clone());\n\n    currControls == null ? void 0 : currControls.addEventListener('change', callback);\n    return () => void (currControls == null ? void 0 : currControls.removeEventListener('change', callback)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controls, defaultControls]);\n  useFrame(({\n    clock\n  }, delta) => {\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\n\nexport { CameraShake };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}