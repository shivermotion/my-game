{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\repos\\\\my-game\\\\src\\\\scenes\\\\MainMenu\\\\Globe3D\\\\Globe3D.tsx\",\n  _s = $RefreshSig$();\nimport { Canvas } from '@react-three/fiber';\nimport { useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Globe3D = () => {\n  _s();\n  const meshRef = useRef();\n\n  // This will rotate the model\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.y += 0.01;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: meshRef,\n      onClick: () => {/* Navigate to Capsule Machine Selection Screen */},\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        attach: \"geometry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Globe3D, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = Globe3D;\nvar _c;\n$RefreshReg$(_c, \"Globe3D\");","map":{"version":3,"names":["Canvas","useFrame","jsxDEV","_jsxDEV","Globe3D","_s","meshRef","useRef","current","rotation","y","children","ref","onClick","attach","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/Users/Work/repos/my-game/src/scenes/MainMenu/Globe3D/Globe3D.tsx"],"sourcesContent":["import { Canvas } from '@react-three/fiber';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\nconst Globe3D = () => {\r\n  const meshRef = useRef();\r\n\r\n  // This will rotate the model\r\n  useFrame(() => {\r\n    if (meshRef.current) {\r\n      meshRef.current.rotation.y += 0.01;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Canvas>\r\n      <mesh ref={meshRef} onClick={() => { /* Navigate to Capsule Machine Selection Screen */ }}>\r\n        <boxBufferGeometry attach=\"geometry\" />\r\n        <meshStandardMaterial attach=\"material\" color=\"blue\" />\r\n      </mesh>\r\n    </Canvas>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGC,MAAM,CAAC,CAAC;;EAExB;EACAN,QAAQ,CAAC,MAAM;IACb,IAAIK,OAAO,CAACE,OAAO,EAAE;MACnBF,OAAO,CAACE,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAI;IACpC;EACF,CAAC,CAAC;EAEF,oBACEP,OAAA,CAACH,MAAM;IAAAW,QAAA,eACLR,OAAA;MAAMS,GAAG,EAAEN,OAAQ;MAACO,OAAO,EAAEA,CAAA,KAAM,CAAE,mDAAqD;MAAAF,QAAA,gBACxFR,OAAA;QAAmBW,MAAM,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCf,OAAA;QAAsBW,MAAM,EAAC,UAAU;QAACK,KAAK,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACb,EAAA,CAlBID,OAAO;EAAA,QAIXH,QAAQ;AAAA;AAAAmB,EAAA,GAJJhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}